version: "3.9"

services:

  database:
    build: 
      context: ./images/sql
      dockerfile: Dockerfile.postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - ./images/sql/create_tables.sql:/docker-entrypoint-initdb.d/create_tables.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d ${DB_NAME} -U ${POSTGRES_USER}"]
      interval: 5s
      timeout: 5s
      retries: 5

  server:
    hostname: chess.mirea
    build:
      context: ./
      dockerfile: images/python/Dockerfile.server
    volumes:
     - ./src:/server  
    command: bash -rc "python3 chess_game/manage.py makemigrations && python3 chess_game/manage.py migrate && python3 chess_game/manage.py runserver 0.0.0.0:8000"
    stdin_open: true
    tty: true
    env_file:
     - .env
    restart: unless-stopped
    healthcheck:
      test: curl -sS http://0.0.0.0:8000 || echo 1
      interval: 5s
      timeout: 5s
      retries: 5
    depends_on:
      database:
        condition: service_healthy
    

  nginx:
    image: nginx:latest
    restart: unless-stopped
    ports:
      - '8080:8080'
    volumes:
      - ./images/nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      database:
        condition: service_healthy
      server:
        condition: service_healthy